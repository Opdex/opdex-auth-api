openapi: 3.0.1
info:
  title: Opdex Auth API
  version: 1.0.0
  contact:
    name: Opdex Contributors
    url: https://github.com/Opdex/opdex-auth-api
  description: The Opdex Auth Web API allows dApps on Cirrus to authenticate users, using [SSAS](https://github.com/Opdex/SSAS).
  license:
    name: MIT
    url: https://github.com/Opdex/opdex-auth-api/blob/main/LICENSE
servers:
  - url: https://test-auth-api.opdex.com/v1
  - url: https://auth-api.opdex.com/v1
tags:
  - name: Authentication
    description: Authenticate a user with Opdex
  - name: SSAS
    description: Integrate a wallet with SSAS
  - name: Status
    description: View health and API status
components: 
  responses:
    TooManyRequests:
      description: Too many requests
      headers:
        Retry-After:
          schema:
            type: integer
            format: int32
            minimum: 0
            example: 30
          description: Indicates how many seconds to wait before making a follow-up request
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/problemDetails"
          example:
            type: https://httpstatuses.com/429
            title: Too Many Requests
            detail: "Quota exceeded. Maximum allowed: 500 per 60s. Please try again in 30 second(s)."
            status: 429
            traceId: 00-00000000000000000000000000000000-0000000000000000-00
    InternalServerError:
      description: Unexpected error occurred
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/problemDetails"
          example:
            type: https://httpstatuses.com/500
            title: Internal Server Error
            status: 500
            traceId: 00-00000000000000000000000000000000-0000000000000000-00
  schemas:
    problemDetails:
      type: object
      properties:
        type:
          type: string
          description: A URI reference that identifies the problem type
        title:
          type: string
          description: A short, human-readable summary of the problem type
        status:
          type: integer
          format: int32
          description: The HTTP status code generated by the origin server for this occurrence of the problem
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem
      additionalProperties: 
        nullable: true
        description: Non-standard problem details extensions that may be ignored
      description: Carries machine-readable details of errors in a HTTP response
    validationProblemDetails:
      allOf:
        - $ref: "#/components/schemas/problemDetails"
        - type: object
          properties:
            errors:
              type: object
              additionalProperties:
                type: array
                items:
                  type: string
                  description: Validation error message
                minItems: 1
              description: Contains invalid properties and associated error messages
    accessTokenRequest:
      type: object
      required:
        - grant_type
      properties:
        grant_type:
          type: string
          enum:
            - code
            - refresh_token
          description: Method of obtaining an access token
        code:
          type: string
          description: Authorization code issued by the server
        code_verifier:
          type: string
          description: Verifier that can be used to verify the `code_challenge`
        refresh_token:
          type: string
          description: Previously supplied refresh token
    stratisSignatureAuthRequest:
      type: object
      required:
        - signature
        - publicKey
      properties:
        signature:
          type: string
          description: Signed Stratis ID
          pattern: ^[A-Za-z0-9+\/]{87}=$
        publicKey:
          type: string
          description: Address of the message signer
          pattern: ^[a-km-zA-HJ-NP-Z1-9]+$
    accessTokenResponse:
      type: object
      description: Access token response body
      properties:
        access_token:
          type: string
        token_type:
          type: string
        expires_in:
          type: integer
        refresh_token:
          type: string
    jsonWebKeySetResponse:
      type: object
      description: JSON Web Key Set that can be used to validate signed JWTs
      properties:
        keys:
          type: array
          items:
            $ref: "#/components/schemas/jsonWebKey"
    jsonWebKey:
      type: object
      properties:
        alg:
          type: string
          description: The cryptographic algorithm used with the key
        kid:
          type: string
          description: Unique identifier for the key
        kty:
          type: string
          description: The family of cryptographic algorithms used with the key
        n:
          type: string
          description: The modulus for an RSA public key
        e:
          type: string
          description: The exponent for an RSA public key
        use:
          type: string
          description: How the key is meant to be used
    statusResponse:
      type: object
      description: Status of the API instance
      properties:
        commit:
          type: string
          description: The commit hash for the version of the code that is running
paths:
  /auth/authorize:
    get:
      tags:
        - Authentication
      summary: Obtain Authorization Grant
      description: >
        Supports a PKCE authorization code grant type flow. A client should redirect the user-agent to this endpoint, which will take the user to the authorization prompt. If the user authenticates successfully, the user-agent will then be redirected to the `redirect_uri`. An authorization code will be included in the query string, along with the state parameter, if initially provided.
      operationId: authorize
      parameters:
        - in: query
          name: redirect_uri
          schema:
            type: string
          description: Upon successful authentication, the user-agent will be redirected to this URI. This must be an absolute URI and may include additional query parameters. The authorization code will be included as part of the query string with the parameter name `code`.
          required: true
          example: https://app.example.com/success
        - in: query
          name: code_challenge
          schema:
            type: string
          description: A client should generate a pseudorandom URL-safe 43 character `code_verifier`. This can be done by generating a random 32-octect sequence, then base64url encoding the result. The `code_challenge_method` transformation should then be applied to the `code_verifier`, to create the `code_challenge`.
          required: true
          example: Qjk1QjRFMDQ3MzY0OEZDNjg5RTU4RTZCNzY3RTc1OEQ3QjczMUYwODBCNUUwOEExOTkwMTY0N0Y2MzA5OUZBQw
        - in: query
          name: code_challenge_method
          schema:
            enum:
              - plain
              - S256
            default: plain
          description: >
            Describes the transformation of the code verifier:
              * **plain:** code_challenge = code_verifier
              * **S256:** code_challenge = BASE64URL-ENCODE(SHA256(ASCII(code_verifier)))
            
            Usage of S256 is a _MUST_ when the client is capable, for improved security.
          required: true
          example: S256
        - in: query
          name: state
          schema:
            type: string
          description: >
            A non-guessable string that is unique to the user session. This is optional, however it is strongly recommended, as this will help mitigate CSRF attacks.
          required: false
          example: Nh5BBV5Yht
      responses:
        302:
          description: User-Agent redirected to the authorization prompt
          headers:
            Location:
              schema:
                type: string
              description: Authorization prompt URL
        429:
          $ref: "#/components/responses/TooManyRequests"
        500:
          $ref: "#/components/responses/InternalServerError"
  /auth/token:
    post:
      tags:
        - Authentication
      summary: Retrieve Access Token
      description: >
        Retrieves an access token that is signed by the server. The access token contains the users wallet address in the payload, as well as additional data which allows it to be validated.
      operationId: getAccessToken
      requestBody:
        description: Access token request parameters
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/accessTokenRequest"
            example:
              grant_type: "code"
              code: "b0907a58-d583-480d-a468-a58e6fc7f472"
              code_verifier: ZGZMVEU2WVQ1Mlp0NnljVHNqOVRlSTJyVmNpcjVEM04
      responses:
        200:
          description: Access token retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accessTokenResponse"
              example:
                access_token: eyJhbGciOiJSUzI1NiIsImtpZCI6IjFmNzZmMWFkMTQ4NjQxY2RhYzY1OTA2NGRmMTMwNTY4IiwidHlwIjoiSldUIn0.eyJzdWIiOiJ0UTlSdWtac0I2YkJzZW5IbkdTbzFxNjlDSnpXR254b2htIiwid2FsbGV0IjoidFE5UnVrWnNCNmJCc2VuSG5HU28xcTY5Q0p6V0dueG9obSIsIm5iZiI6MTY1MDI5MTkzNywiZXhwIjoxNjUwMzc4MzM3LCJpYXQiOjE2NTAyOTE5MzcsImlzcyI6InRlc3QtYXV0aC1hcGkub3BkZXguY29tIiwiYXVkIjoidGVzdC1hcHAub3BkZXguY29tIn0.Dq1wPLYhzm7eTQXw_T-aF6GT-mIoVtrksXZq5W_INsj5SxJKHdeQuNs1d6l9w9MgYofEbbTaMXBr64jMQXqpUlEoUHBKf-z5YtPOvNvSJltBkVDMD-2_Y-_m8e8uTPXj8VY1K9wbs1ecjMCO0KDMDKlvc7cuzjES6DJmXaxZp-89-4mCvKbfZswgzQ2X2k6q8SwQPyWgTmrymkcwAuaSJC-_MxmLU-j8_MncWYCzSzcXygOZfiZKq_W5biUJVqj4oYQdbSI8um0Ur3g_Qzy1lUvgqR_7McSETR47ug9_Uoj1Kmglvg2bsBBxK5SjIHJbUiAY9wbBMsyMfGR2ZHRnSg
                token_type: bearer
                expires_in: 3600
                refresh_token: 3XUt25gb8S7oPMqNf0ULfwrt
        400:
          description: The request is not valid
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/validationProblemDetails"
              example:
                type: https://httpstatuses.com/400
                title: One or more validation errors occurred.
                status: 400
                traceId: 00-00000000000000000000000000000000-0000000000000000-00
                errors:
                  code:
                    - Authorization code is not valid.
        429:
          $ref: "#/components/responses/TooManyRequests"
        500:
          $ref: "#/components/responses/InternalServerError"
  /auth/jwks:
    get:
      tags:
        - Authentication
      summary: Get JSON Web Key Set
      description: >
        Retrieves public keys that can used to verify tokens returned by the server.
      operationId: getJsonWebKeySet
      responses:
        200:
          description: JSON Web Key Set found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/jsonWebKeySetResponse"
              example:
                keys:
                  - n: 1dTDvWnEHm_fOwX8xpQ8YzF0zvO1ERAARCsJz63z9cv3W94G78iyqUX7YkYUdIwe-Z25RS-M871-_zqdlDdCpxPtQPJjNa8VoGn7jvWmihBuCmwDPcF7Kw3gBwposHO7eFU3JLKdErDgrKBALp-Pm5EMGXFPeNCa7PKQAqdWrm0amDGHaNDjycCOojyYo_9RXlTAMia927iMT-Kch7eQQ3AN5k5rAODilNYMRafq9IriI-hUP5Eak7LojD_6Z_H_qIhEj2WIgf8jplywWOrklbUvf1W74jNThioQ012VEStGcNz7XqqUarCdewWi16BwKybCJc2ahMCLXKd_FGFn9Q
                    e: AQAB
                    alg: RS256
                    kid: e2ba0368610e4c69974c3177ea52f9f5
                    kty: RSA
                    use: sig                  
        429:
          $ref: "#/components/responses/TooManyRequests"
        500:
          $ref: "#/components/responses/InternalServerError"
  /ssas/callback:
    post:
      tags:
        - SSAS
      summary: Stratis Signature Auth Callback
      description: >
        Responds to a request from a Stratis Signature Auth signer's wallet. See the [specification](https://github.com/Opdex/SSAS) for further detail. By implementing this callback, your wallet software can be used to connect with any dApp that integrates with SSAS or the Opdex Auth API.
      operationId: authenticateCallback
      parameters:
        - name: uid
          in: query
          description: Unique identifier for the Stratis ID
          required: true
          schema:
            type: string
          example: Lf5t5J-oAn3CZ9YY27JnK5XtpbjIOD3BxyvHhd80AQ4fsJ7o0J8i5uSjzHZ9jeS3
        - name: exp
          in: query
          description: Unix timestamp indicating when the signature expires
          required: true
          schema:
            type: integer
            format: int64
            minimum: 0
            maximum: 273402300799
          example: 1641220000
      requestBody:
        description: The Stratis Signature Auth body
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/stratisSignatureAuthRequest"
            example:
              signature: H9xjfnvqucCmi3sfEKUes0qL4mD9PrZ/al78+Ka440t6WH5Qh0AIgl5YlxPa2cyuXdwwDa2OYUWR/0ocL6jRZLc=
              publicKey: tQ9RukZsB6bBsenHnGSo1q69CJzWGnxohm
      responses:
        204:
          description: Signature was validated successfully
        400:
          description: The request is not valid
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/validationProblemDetails"
              example:
                type: https://httpstatuses.com/400
                title: One or more validation errors occurred.
                status: 400
                traceId: 00-00000000000000000000000000000000-0000000000000000-00
                errors:
                  exp:
                    - Expiration date must be a unix timestamp.
        429:
          $ref: "#/components/responses/TooManyRequests"
        500:
          $ref: "#/components/responses/InternalServerError"
  /status:
    get:
      tags:
        - Status
      summary: Get Status
      description: Retrieves status details for the running instance of the server.
      operationId: getStatus
      responses:
        200:
          description: Status details found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusResponse"
              example:
                commit: 8deb2e6a9a3d117aeab91a271ac8fa61a3a9330a
        429:
          $ref: "#/components/responses/TooManyRequests"
        500:
          $ref: "#/components/responses/InternalServerError"